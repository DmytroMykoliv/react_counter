{"version":3,"sources":["component/Counter.tsx","App.tsx","index.tsx"],"names":["Counter","props","count","addOne","add100","increase","type","onClick","App","state","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA2B,SAACC,GACvC,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,OACAC,EAEEH,EAFFG,OACAC,EACEJ,EADFI,SAGF,OACE,qCACE,wCAEGH,KAEH,wBAAQI,KAAK,SAASC,QAASJ,EAA/B,mBACA,wBAAQG,KAAK,SAASC,QAASH,EAA/B,qBACA,wBAAQE,KAAK,SAASC,QAASF,EAA/B,0BCwBSG,G,kNAxCbC,MAAe,CACbP,MAAO,G,EAGTC,OAAS,WACP,EAAKO,UAAS,SAACD,GAAD,MAAY,CACxBP,MAAOO,EAAMP,MAAQ,O,EAIzBE,OAAS,WACP,EAAKM,UAAS,SAACD,GAAD,MAAY,CACxBP,MAAOO,EAAMP,MAAQ,S,EAIzBG,SAAW,WACS,EAAKI,MAAfP,MAEI,IAAM,GAChB,EAAKE,SAGP,EAAKD,U,4CAGP,WACE,OACE,mCACE,cAAC,EAAD,CACED,MAAOS,KAAKF,MAAMP,MAClBC,OAAQQ,KAAKR,OACbC,OAAQO,KAAKP,OACbC,SAAUM,KAAKN,iB,GAlCPO,IAAMC,YCLxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b1eab443.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  count: number,\n  addOne: () => void,\n  add100: () => void,\n  increase: () => void,\n};\n\nexport const Counter: React.FC<Props> = (props) => {\n  const {\n    count,\n    addOne,\n    add100,\n    increase,\n  } = props;\n\n  return (\n    <>\n      <h1>\n        Count:\n        {count}\n      </h1>\n      <button type=\"button\" onClick={addOne}>Add 1</button>\n      <button type=\"button\" onClick={add100}>Add 100</button>\n      <button type=\"button\" onClick={increase}>Increase</button>\n    </>\n  );\n};\n","import React from 'react';\nimport { Counter } from './component/Counter';\nimport './App.scss';\n\ntype State = {\n  count: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    count: 0,\n  };\n\n  addOne = () => {\n    this.setState((state) => ({\n      count: state.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState((state) => ({\n      count: state.count + 100,\n    }));\n  };\n\n  increase = () => {\n    const { count } = this.state;\n\n    if (count % 5 === 0) {\n      this.add100();\n    }\n\n    this.addOne();\n  };\n\n  render() {\n    return (\n      <>\n        <Counter\n          count={this.state.count}\n          addOne={this.addOne}\n          add100={this.add100}\n          increase={this.increase}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}